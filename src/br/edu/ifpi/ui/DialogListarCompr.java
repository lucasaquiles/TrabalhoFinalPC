/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DialogListarCompr.java
 *
 *
 * Created on 01/06/2011, 17:26:00
 */
package br.edu.ifpi.ui;

import br.edu.ifpi.beans.Compromisso;
import br.edu.ifpi.beans.Usuario;
import br.edu.ifpi.beans.UsuarioLogado;
import br.edu.ifpi.dao.CompromissoDao;
import br.edu.ifpi.dao.UsuarioDao;
import br.edu.ifpi.factory.DaoFactory;
import com.thoughtworks.xstream.XStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DateFormat;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Laerton
 */
public class DialogListarCompr extends javax.swing.JDialog {

    UsuarioLogado usuarioLogado;
    DefaultTableModel model;

    /** Creates new form DialogListarCompr */
    public DialogListarCompr(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);

        usuarioLogado = new UsuarioLogado();
        model = (DefaultTableModel) TabelaCompromissos.getModel();
        mountTableCompromissos();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    public void mountTableCompromissos() {

        Vector v = null;

        if (usuarioLogado.getUsuario().getCompromissos().size() > 0 && usuarioLogado.getUsuario().getCompromissos() != null) {

            System.out.println("Montou a lista");
            for (Compromisso comp : usuarioLogado.getUsuario().getCompromissos()) {

                v = new Vector();
                v.add(comp);
                v.add(comp.getDescricao());

                v.add(comp.getDataInicio() != null ? DateFormat.getInstance().format(comp.getDataInicio().getTime()) : null);
                v.add(comp.getDataFim() != null ? DateFormat.getInstance().format(comp.getDataFim().getTime()) : null);

                if (comp.getCategoria() != null) {
                    v.add(comp.getCategoria().getNome());
                }

                model.addRow(v);
                TabelaCompromissos.setModel(model);
            }
        } else {
            System.out.println("sem itens!");
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        CampoPesquisa = new javax.swing.JTextField();
        ComboOpcaoPesquisa = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        BotaoPesquisar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        BotaoAlterar = new javax.swing.JButton();
        BotaoImportarXML = new javax.swing.JButton();
        BotaoExportarXML = new javax.swing.JButton();
        BotaoRemover = new javax.swing.JButton();
        BotaoSair = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaCompromissos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Lista de Compromissos");

        jLabel1.setText("Consulta:");

        ComboOpcaoPesquisa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Título", "Data de Inicio", "Data de Termino", "Categoria" }));

        jLabel2.setText("Por:");

        BotaoPesquisar.setText("Pesquisar");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        BotaoAlterar.setText("Alterar");
        BotaoAlterar.setEnabled(false);
        BotaoAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoAlterarActionPerformed(evt);
            }
        });

        BotaoImportarXML.setText("Importar XML");

        BotaoExportarXML.setText("Exportar XML");
        BotaoExportarXML.setEnabled(false);
        BotaoExportarXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoExportarXMLActionPerformed(evt);
            }
        });

        BotaoRemover.setText("Remover");
        BotaoRemover.setEnabled(false);
        BotaoRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoRemoverActionPerformed(evt);
            }
        });

        BotaoSair.setText("Sair");
        BotaoSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BotaoAlterar)
                .addGap(24, 24, 24)
                .addComponent(BotaoRemover)
                .addGap(18, 18, 18)
                .addComponent(BotaoImportarXML)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BotaoExportarXML)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 602, Short.MAX_VALUE)
                .addComponent(BotaoSair)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotaoAlterar)
                    .addComponent(BotaoExportarXML)
                    .addComponent(BotaoImportarXML)
                    .addComponent(BotaoRemover)
                    .addComponent(BotaoSair))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TabelaCompromissos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        TabelaCompromissos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Título", "Descrição", "Data de Início", "Data de Término", "Categoria"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabelaCompromissos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaCompromissosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TabelaCompromissos);
        TabelaCompromissos.getColumnModel().getColumn(0).setResizable(false);
        TabelaCompromissos.getColumnModel().getColumn(1).setResizable(false);
        TabelaCompromissos.getColumnModel().getColumn(2).setResizable(false);
        TabelaCompromissos.getColumnModel().getColumn(3).setResizable(false);
        TabelaCompromissos.getColumnModel().getColumn(4).setResizable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(CampoPesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, 777, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(161, 161, 161))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ComboOpcaoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BotaoPesquisar)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1018, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CampoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotaoPesquisar)
                    .addComponent(ComboOpcaoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotaoAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoAlterarActionPerformed


        CompromissoDao compromissoDao = new DaoFactory().buildCompromissoDao();
        Compromisso compromisso = (Compromisso) TabelaCompromissos.getValueAt(TabelaCompromissos.getSelectedRow(), 0);



        if (compromisso != null) {
            DefaultListModel listModel = new DefaultListModel();
            
            try{
                for(Usuario u  : compromisso.getParticipantes()){
                    listModel.addElement(u);
                }
                
            }catch(Exception e){
                
            }

            DialogCompromisso dialogCompromisso = new DialogCompromisso(null, rootPaneCheckingEnabled, compromissoDao, compromisso,
                    model, listModel);
            
            dialogCompromisso.setVisible(true);
        }
}//GEN-LAST:event_BotaoAlterarActionPerformed

    private void BotaoSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoSairActionPerformed
        dispose();
    }//GEN-LAST:event_BotaoSairActionPerformed

    private void TabelaCompromissosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaCompromissosMouseClicked

        int row = TabelaCompromissos.getSelectedRow();

        BotaoExportarXML.setEnabled(true);

        if (row != -1) {

            BotaoRemover.setEnabled(true);
            BotaoAlterar.setEnabled(true);
        }
    }//GEN-LAST:event_TabelaCompromissosMouseClicked

    private void BotaoExportarXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoExportarXMLActionPerformed

        int rows[] = TabelaCompromissos.getSelectedRows();

        if (rows.length != -1) {

            ArrayList<Compromisso> compromissos = new ArrayList<Compromisso>();
            Compromisso c = null;

            for (int i = 0; i
                    < rows.length; i++) {

                c = (Compromisso) TabelaCompromissos.getValueAt(rows[i], 0);
                compromissos.add(c);
            }

            XStream xStream = new XStream();

            BufferedWriter wr;
            try {

                wr = new BufferedWriter(new FileWriter("compromissos_exports/compromisso_" + usuarioLogado.getUsuario().getUsername() + ".xml"));

                String f = xStream.toXML(compromissos);
                wr.append(f);
                wr.close();

                JOptionPane.showMessageDialog(null, "Os " + rows.length + 1 + "registros foram exportados!");
            } catch (IOException ex) {

                Logger.getLogger(DialogListarCompr.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_BotaoExportarXMLActionPerformed

    private void BotaoRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoRemoverActionPerformed

        int row = TabelaCompromissos.getSelectedRow();

        if (row != -1) {

            Compromisso c = (Compromisso) TabelaCompromissos.getValueAt(row, 0);

            int conf = JOptionPane.showConfirmDialog(null, "você quer remover esste compromisso?");
            if (conf == 0) {
                usuarioLogado.getUsuario().getCompromissos().remove(c);

                usuarioLogado.getUsuario().setCompromissos(usuarioLogado.getUsuario().getCompromissos());

                UsuarioDao uDao = new DaoFactory().buildUsuarioDao();
                uDao.update(usuarioLogado.getUsuario());

                JOptionPane.showMessageDialog(null, "Compromisso removido!");
                model.removeRow(row);
            }
        }
    }//GEN-LAST:event_BotaoRemoverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                DialogListarCompr dialog = new DialogListarCompr(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);


                    }
                });
                dialog.setVisible(true);


            }
        });


    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotaoAlterar;
    private javax.swing.JButton BotaoExportarXML;
    private javax.swing.JButton BotaoImportarXML;
    private javax.swing.JButton BotaoPesquisar;
    private javax.swing.JButton BotaoRemover;
    private javax.swing.JButton BotaoSair;
    private javax.swing.JTextField CampoPesquisa;
    private javax.swing.JComboBox ComboOpcaoPesquisa;
    private javax.swing.JTable TabelaCompromissos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
